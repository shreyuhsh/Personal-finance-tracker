import json
import os
from datetime import datetime

class FinanceTracker:
    def __init__(self, file_name="finance_data.json"):
        self.transactions = []
        self.file_name = file_name
        self.load_data()

    def add_transaction(self, amount, category, type_):
        transaction = {
            "amount": amount,
            "category": category,
            "type": type_,  # "income" or "expense"
            "date": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        }
        self.transactions.append(transaction)
        self.save_data()

    def show_transactions(self):
        if not self.transactions:
            print("ðŸ“‚ No transactions yet.")
            return
        print("\nðŸ“œ Transactions:")
        for t in self.transactions:
            print(f"[{t['date']}] {t['type'].upper()} - {t['category']} : ${t['amount']}")

    def filter_expenses_over(self, limit):
        print(f"\nðŸ”Ž Expenses over ${limit}:")
        for t in self.transactions:
            if t['type'] == "expense" and t['amount'] > limit:
                print(f"[{t['date']}] {t['category']} : ${t['amount']}")

    def search_by_category(self, keyword):
        print(f"\nðŸ”Ž Transactions in '{keyword}':")
        for t in self.transactions:
            if keyword.lower() in t['category'].lower():
                print(f"[{t['date']}] {t['type'].upper()} - {t['category']} : ${t['amount']}")

    def sort_by_amount(self):
        self.transactions.sort(key=lambda x: x['amount'], reverse=True)
        print("\nðŸ“Š Transactions sorted by amount (high â†’ low):")
        self.show_transactions()

    def ascii_spending_chart(self):
        monthly = {}
        for t in self.transactions:
            if t["type"] == "expense":
                month = t["date"][:7]  # YYYY-MM
                monthly[month] = monthly.get(month, 0) + t["amount"]

        print("\nðŸ“ˆ Monthly Spending Chart:")
        for month, total in monthly.items():
            print(f"{month}: {'â–ˆ' * (total // 10)} ${total}")

    def save_data(self):
        with open(self.file_name, "w") as f:
            json.dump(self.transactions, f, indent=4)

    def load_data(self):
        if os.path.exists(self.file_name):
            with open(self.file_name, "r") as f:
                self.transactions = json.load(f)


# ---------------- DEMO -----------------
if __name__ == "__main__":
    app = FinanceTracker()

    app.add_transaction(500, "Salary", "income")
    app.add_transaction(120, "Groceries", "expense")
    app.add_transaction(200, "Shopping", "expense")
    app.add_transaction(50, "Snacks", "expense")

    app.show_transactions()
    app.filter_expenses_over(100)
    app.search_by_category("shop")
    app.sort_by_amount()
    app.ascii_spending_chart()
